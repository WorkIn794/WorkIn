---
import LoginLayout from "@layouts/LoginLayout.astro";
import Navmenu from "@components/Navmenu.astro";
import LoginInpt from "@components/inputs/LoginInpt.astro";
import CheckBox from "@components/inputs/CheckBox.astro";
import Link from "@components/Link.astro";
import Button from "@components/Button.astro";

const navPages: ReadonlyArray<[string, string]> = [
    ["Home", "/"],
    ["About us", ""],
    ["Blog", ""],
    ["Pricing", ""]
];

const formID: Readonly<string> = "login";
---

<LoginLayout title="WorkIn">
	<section>
		<Navmenu mobile navPages={navPages}/>
		<h1>WorkIn<span>AI</span></h1>
		<h2>Artificial Intelligence <span>Driving</span></h2>
		<h2><span>Results For The</span> Recruitment Business</h2>
		<small>Welcome back! Please <ins>login</ins> to your account.</small>
		<form id={formID}>
			<LoginInpt form={formID} name="email" type="email" label="Email Address" autocomplete="email" required/>
			<LoginInpt form={formID} name="password" type="password" label="Password" autocomplete="current-password" required/>
			<div class="mt-2 mb-10 ml-2 flex flex-wrap justify-between">
				<CheckBox name="rememberMe" form="login" text="Remember Me" intent="login"/>
				<Link href="https://youtu.be/dQw4w9WgXcQ?si=S2f1ZH6iodUjWRr8" text="Forgot Password?" intent="forgetPW" aria-label="Forgotten password"/>
			</div>
			<div class="flex gap-x-4">
				<Button aria-label="Login" form={formID} type="submit" text="Login" intent="login" className="flex-none"/>
			</div>
		</form>
		<footer>
			<p>Or login with</p>
			<Link href="https://youtu.be/dQw4w9WgXcQ?si=S2f1ZH6iodUjWRr8" text="LinkedIn" aria-label="Login with LinkedIn"/>
			<Link href="https://youtu.be/dQw4w9WgXcQ?si=S2f1ZH6iodUjWRr8" text="Google"   aria-label="Login with Google"/>
		</footer>
	</section>
	<section>
		<Navmenu mobile={false} navPages={navPages}/>
	</section>
</LoginLayout>

<script>
	document.getElementById("login")?.addEventListener("submit", async e => {
		e.preventDefault();

		const form = e.target as HTMLFormElement;
		const formData = new FormData(form);
		const data = Object.fromEntries(formData.entries()) as { email: string, password: string, role: string };
		data.role = "enterprise";

		await fetch(`${import.meta.env.DEV ? import.meta.env.PUBLIC_NTL_LOCAL_FUNCTION : import.meta.env.PUBLIC_NTL_FUNCTION}/login`, {
			method: "POST",
			body: JSON.stringify(data)
		}).then(async res => await res.json()).then(res => {
			res ? window.location.href = "/enterprise/process" : alert("Wrong Credentials");
			form.reset();
		});
	});
</script>