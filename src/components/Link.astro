---
import { Icon } from "astro-icon/components";
import { cva } from "cva";
import { twMerge } from "tailwind-merge";
import type { VariantProps } from "cva";
import type { HTMLAttributes } from "astro/types";
import type { IconProps, ClassName } from "src/types/global";

const link = cva([
        "text-WIblack",
        "size-fit",
        "flex flex-nowrap items-center",
        "[&_span]:text-nowrap",
        "[&_span]:relative",
        "[&_span]:before:bg-WIblack",
        "[&_span]:before:w-full [&_span]:before:h-[1.1px]",
        "[&_span]:before:absolute [&_span]:before:bottom-0 [&_span]:before:scale-x-0",
        "[&_span]:before:transition [&_span]:before:duration-200 [&_span]:before:ease-in",
        "[&_span]:before:hover:scale-x-100",
        "[&_svg]:transition [&_svg]:duration-200 [&_svg]:ease-in"
], {
    variants: {
        intent: {
            forgetPW: [
                "[&_span]:text-sm [&_span]:text-opacity-60",
                "[&_span]:before:bg-opacity-60"
            ],
            navBar: [
                "group",
                "gap-x-2",
                "[&_span]:text-sm",
                "[&_svg]:flex-none [&_svg]:hover:scale-110 [&_svg]:size-[1em]"
            ],
            navControl: [
                "[&_span]:font-semibold",
                "[&_svg]:size-5"
            ],
            sideBar: [
                "text-xl",
                "gap-x-2",
                "[&_span]:before:hidden",
                "[&_svg]:text-[1.5em]",
                "[&_svg]:hover:scale-110 [&_svg]:hover:text-WIblue"
            ],
            iconBtn: [
                "gap-x-1",
                "icon-hover"
            ]
        },
        size: {
            full: ["size-full"]
        }
    }
});

type Props =
    IconProps &
    HTMLAttributes<"a"> &
    VariantProps<typeof link> & {
        id?: string;
        href: string;
        text: string;
        className?: ClassName;
        iconClass?: ClassName;
        iconColor?: string;
    };
const { id, href, text, icon, iconLeft, iconRight, iconColor = "#0C31F1", intent, size, className, iconClass } = Astro.props;
---

<a id={id} href={href} class={twMerge([link({intent, size}), `${iconRight && "flex-row-reverse"}`, `${iconLeft && "flex-row"}`, className])}>
    {icon && <Icon name={icon} class={twMerge([iconClass])}/>}
    <span set:text={text}/>
</a>

<style define:vars={{ iconColor}}>
    a.icon-hover:hover svg {
        color: var(--iconColor);
        transform: scale(1.1);
        transition: transform color 200ms ease-in-out 0s;
    }
</style>