---
import { cva } from "cva";
import type { VariantProps } from "cva";
import type { HTMLAttributes } from "astro/types";
import type { ClassName } from "src/types/global";

const textbox = cva([], {
    variants: {
        intent: {
            primary: [""]
        }
    }
});

interface Props extends HTMLAttributes<"input">,
    VariantProps<typeof textbox>{
        name: string;
        type: "text" | "password" | "email" | "number" | "tel" | "url";
        label?: string;
        className?: ClassName;
        innerClass?: ClassName;
        iconConfirm?: boolean;
};

const { name, label, iconConfirm, intent, className, innerClass, id, ...inputProps } = Astro.props;
---

<div class:list={[textbox({intent}), className]}>
    {label &&
    <label for={id || name}>{label}</label>}
    <input id={id || name} name={name || id} class:list={[innerClass, iconConfirm && "icon"]} {...inputProps}/>
</div>

<style>
    @tailwind base;
    @tailwind components;
    @tailwind utilities;
    
    label{
        @apply text-WIblack font-semibold block;
    }
    input{
        @apply
        w-full h-12 py-1 pl-4
        outline-none
        border-WIgray-contrast border-[1.5px] rounded-md;
    }
    input:user-invalid{
        @apply border-red-600;
    }
    input.icon:user-valid{
        padding-right: 2.5rem;
        background: url("/svg/CheckBoxIcon.svg") no-repeat center right 1rem / 1.5em;
    }
</style>