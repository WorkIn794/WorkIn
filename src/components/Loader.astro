---
import type { HTMLAttributes } from "astro/types";
import type { ClassName } from "src/types/global";

interface Props extends HTMLAttributes<"div">{
    type: "bars" | "bars-1";
    size?: number;
    className?: ClassName;
};

const { type, size = 4, className, ...divProps } = Astro.props;
---

<div class:list={[type, className]} {...divProps}/>

<style define:vars={{size}}>
    .bars {
        width: calc(var(--size) * 1em);
        aspect-ratio: 0.8;
        --c:no-repeat repeating-linear-gradient(90deg,#000 0 20%,#0000 0 40%);
        background: var(--c),var(--c),var(--c),var(--c);
        background-size: 100% 21%;
        animation: l24 .75s infinite alternate;
    }
    @keyframes l24 {
        0%,
        10% {background-position:0 calc(0*100%/4),0 calc(1*100%/4),0 calc(2*100%/4),0 calc(3*100%/4)}
        25% {background-position:0 calc(0*100%/4),0 calc(1*100%/4),0 calc(2*100%/4),0 calc(4*100%/4)}
        50% {background-position:0 calc(0*100%/4),0 calc(1*100%/4),0 calc(3*100%/4),0 calc(4*100%/4)}
        75% {background-position:0 calc(0*100%/4),0 calc(2*100%/4),0 calc(3*100%/4),0 calc(4*100%/4)}
        90%,
        100%{background-position:0 calc(1*100%/4),0 calc(2*100%/4),0 calc(3*100%/4),0 calc(4*100%/4)}
    }

    .bars-1 {
    width: calc(var(--size) * 1em);
    aspect-ratio: 1;
    --c: no-repeat linear-gradient(#000 calc(50% - 10px),#0000 0 calc(50% + 10px),#000 0);
    background: 
        var(--c) 0%   100%,
        var(--c) 50%  100%,
        var(--c) 100% 100%;
    background-size: 20% calc(200% + 20px);
    animation:l4 1s infinite linear;
    }
    @keyframes l4 {
        33%  {background-position: 0% 50%,50% 100%,100% 100%}
        50%  {background-position: 0%  0%,50%  50%,100% 100%}
        66%  {background-position: 0%  0%,50%   0%,100%  50%}
        100% {background-position: 0%  0%,50%   0%,100%   0%}
    }
</style>