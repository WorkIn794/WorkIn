---
import { Icon } from "astro-icon/components";
import { cva } from "cva";
import { twMerge } from "tailwind-merge";
import type { VariantProps } from "cva";
import type { HTMLAttributes } from "astro/types";

const button = cva([], {
    variants: {
        intent: {
            login: [
                "text-WIblue",
                "w-24 h-12",
                "border-WIblue border-2 rounded-lg",
                "transition duration-200 ease-in-out",
                "hover:text-white hover:bg-WIblue hover:shadow-md",
                "focus:text-white focus:bg-WIblue focus:shadow-md"
            ],
            withIcon: [
                "group",
                "text-WIblack",
                "flex flex-nowrap items-center gap-x-2",
                "[&_svg]:size-[1.5em]",
                "[&_svg]:transition-all [&_svg]:duration-200 [&_svg]:ease-in",
                "[&_span]:text-nowrap",
                "[&_span]:relative",
                "[&_span]:before:bg-WIblack",
                "[&_span]:before:w-full [&_span]:before:h-[1.1px]",
                "[&_span]:before:absolute [&_span]:before:bottom-0 [&_span]:before:scale-x-0",
                "[&_span]:before:transition-all [&_span]:before:duration-200 [&_span]:before:ease-in"
            ]
        },
        iconPosition: {
            left: [""]
        },
        size: {
            md: ["text-base"]
        }
    }
});

interface Props extends HTMLAttributes<"button">,
    VariantProps<typeof button>{
        text: string;
        icon?: string;
        className?: string;
    };
const { text, icon, className, intent, size = "md", iconPosition, ...buttonProps } = Astro.props;
---

<button class={twMerge([button({intent, size, iconPosition}), className])} {...buttonProps}>
    {icon && <Icon name={icon} class:list={[intent === "withIcon" && "group-hover:text-WIblue-input"]}/>}
    <span set:text={text} class:list={[icon && "group-hover:before:scale-x-100"]}/>
</button>